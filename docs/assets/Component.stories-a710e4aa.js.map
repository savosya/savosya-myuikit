{"version":3,"file":"Component.stories-a710e4aa.js","sources":["../../packages/radio/src/components/check-icon/index.tsx","../../packages/radio/src/Component.tsx"],"sourcesContent":["import React from 'react'\n\ntype CheckIconProps = {\n  className?: string\n  size: 's' | 'm' | 'l'\n}\n\nconst sizeConfig = {\n  s: {\n    width: '10',\n    height: '10'\n  },\n  m: {\n    width: '11',\n    height: '11'\n  },\n  l: {\n    width: '12',\n    height: '12'\n  }\n}\n\nexport const CheckIcon = ({ size, className }: CheckIconProps) => {\n  return (\n    <svg\n      width={sizeConfig[size].width}\n      height={sizeConfig[size].height}\n      viewBox=\"0 0 9 6\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n    >\n      <path\n        d=\"M7.4375 0.8125L3.0625 5.1875L0.875 3\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.53\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  )\n}\n","import * as React from 'react'\nimport { useRef, useState } from 'react'\nimport clsx from 'clsx'\n\nimport { useFocus } from '@savosya/savosya-myuikit-hooks'\nimport { mergeRefs } from '@savosya/savosya-myuikit-utils'\n\nimport { CheckIcon } from './components'\nimport { RadioProps } from './radio.types'\nimport cls from './index.module.scss'\n\nexport const Radio = React.forwardRef<HTMLLabelElement, RadioProps>((props, ref) => {\n  const {\n    className,\n    label,\n    size = 'm',\n    checked,\n    markType = 'default',\n    name,\n    onChange,\n    classes,\n    disabled,\n    ...rest\n  } = props\n\n  const isControlled = typeof checked === 'boolean'\n\n  const [internalChecked, setChecked] = useState(false)\n\n  const labelRef = useRef<HTMLLabelElement>(null)\n  const [focused] = useFocus(labelRef, 'keyboard')\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (disabled) return\n\n    if (!isControlled) {\n      setChecked(true)\n    }\n\n    if (onChange) {\n      onChange(event, { checked: event.target.checked, name: event.target.name })\n    }\n  }\n\n  const isChecked = isControlled ? checked : internalChecked\n  return (\n    <label\n      className={clsx(\n        cls.root,\n        cls[size],\n        {\n          [cls.indeterminate]: isChecked && markType === 'default',\n          [cls.checked]: isChecked && markType === 'check',\n          [cls.disabled]: disabled\n        },\n        className,\n        classes?.root\n      )}\n      ref={mergeRefs([labelRef, ref])}\n    >\n      <input type=\"radio\" name={name} onChange={handleChange} checked={isChecked} disabled={disabled} {...rest} />\n\n      <span\n        className={clsx(cls.box, cls[size], {\n          [cls.indeterminate]: isChecked && markType === 'default',\n          [cls.checked]: isChecked && markType === 'check',\n          [cls.disabled]: disabled,\n          [cls.focus]: focused\n        })}\n      >\n        {isChecked && markType === 'check' && <CheckIcon size={size} />}\n\n        {isChecked && markType === 'default' && (\n          <span\n            className={clsx(cls.indeterminateBox, cls[size], {\n              [cls.disabled]: disabled\n            })}\n          />\n        )}\n      </span>\n\n      <span className={clsx(cls.content, classes?.content, { [cls.disabled]: disabled })}>{label}</span>\n    </label>\n  )\n})\n"],"names":["sizeConfig","CheckIcon","size","className","jsx","Radio","React.forwardRef","props","ref","label","checked","markType","name","onChange","classes","disabled","rest","isControlled","internalChecked","setChecked","useState","labelRef","useRef","focused","useFocus","handleChange","event","isChecked","jsxs","clsx","cls","mergeRefs"],"mappings":"yLAOA,MAAAA,EAAA,CAAmB,EAAA,CACd,MAAA,KACM,OAAA,IACC,EACV,EAAA,CACG,MAAA,KACM,OAAA,IACC,EACV,EAAA,CACG,MAAA,KACM,OAAA,IACC,CAEZ,EAEOC,EAAA,CAAA,CAAA,KAAAC,EAAA,UAAAC,KACLC,EACE,MAAC,CAAA,MAAAJ,EAAAE,CAAA,EAAA,MACyB,OAAAF,EAAAE,CAAA,EAAA,OACC,QAAA,UACjB,KAAA,OACH,MAAA,6BACC,UAAAC,EACN,SAAAC,EAEA,OAAC,CAAA,EAAA,uCACG,OAAA,eACK,YAAA,OACK,cAAA,QACE,eAAA,OACC,CAAA,CACjB,CAAA,gqBC3BCC,EAAAC,EAAA,WAAA,CAAAC,EAAAC,IAAA,CACL,KAAA,CAAM,UAAAL,EACJ,MAAAM,EACA,KAAAP,EAAA,IACO,QAAAQ,EACP,SAAAC,EAAA,UACW,KAAAC,EACX,SAAAC,EACA,QAAAC,EACA,SAAAC,EACA,GAAAC,CACG,EAAAT,EAGLU,EAAA,OAAAP,GAAA,UAEA,CAAAQ,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EAEAC,EAAAC,SAAA,IAAA,EACA,CAAAC,CAAA,EAAAC,EAAAH,EAAA,UAAA,EAEAI,EAAAC,GAAA,CACEX,IAEAE,GACEE,EAAA,EAAA,EAGFN,GACEA,EAAAa,EAAA,CAAA,QAAAA,EAAA,OAAA,QAAA,KAAAA,EAAA,OAAA,IAAA,CAAA,EACF,EAGFC,EAAAV,EAAAP,EAAAQ,EACA,OAAAU,EACE,QAAC,CAAA,UAAAC,EACYC,EAAA,KACLA,EAAA5B,CAAA,EACI,CACR,CAAA4B,EAAA,aAAA,EAAAH,GAAAhB,IAAA,UACiD,CAAAmB,EAAA,OAAA,EAAAH,GAAAhB,IAAA,QACN,CAAAmB,EAAA,QAAA,EAAAf,CACzB,EAClBZ,EACAW,GAAA,YAAAA,EAAA,IACS,EACX,IAAAiB,EAAA,CAAAV,EAAAb,CAAA,CAAA,EAC8B,SAAA,CAE9BJ,EAAA,QAAA,CAAA,KAAA,QAAA,KAAAQ,EAAA,SAAAa,EAAA,QAAAE,EAAA,SAAAZ,EAAA,GAAAC,CAAA,CAAA,EAA0GY,EAE1G,OAAC,CAAA,UAAAC,EAAAC,EAAA,IAAAA,EAAA5B,CAAA,EAAA,CACqC,CAAA4B,EAAA,aAAA,EAAAH,GAAAhB,IAAA,UACa,CAAAmB,EAAA,OAAA,EAAAH,GAAAhB,IAAA,QACN,CAAAmB,EAAA,QAAA,EAAAf,EACzB,CAAAe,EAAA,KAAA,EAAAP,CACH,CAAA,EACd,SAAA,CAEAI,GAAAhB,IAAA,SAAAP,EAAAH,EAAA,CAAA,KAAAC,EAAA,EAA4DyB,GAAAhB,IAAA,WAAAP,EAG3D,OAAC,CAAA,UAAAyB,EAAAC,EAAA,iBAAAA,EAAA5B,CAAA,EAAA,CACkD,CAAA4B,EAAA,QAAA,EAAAf,CAC/B,CAAA,CACjB,CAAA,CACH,CAAA,CAAA,EAEJX,EAAA,OAAA,CAAA,UAAAyB,EAAAC,EAAA,QAAAhB,GAAA,YAAAA,EAAA,QAAA,CAAA,CAAAgB,EAAA,QAAA,EAAAf,CAAA,CAAA,EAAA,SAAAN,EAAA,CAE2F,CAAA,CAAA,CAGjG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}