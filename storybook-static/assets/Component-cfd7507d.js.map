{"version":3,"file":"Component-cfd7507d.js","sources":["../../packages/checkbox/src/components/check-icon/index.tsx","../../packages/checkbox/src/Component.tsx"],"sourcesContent":["import React from 'react'\n\ntype CheckIconProps = {\n  className?: string\n  size: 's' | 'm' | 'l'\n}\n\nconst sizeConfig = {\n  s: {\n    width: '10',\n    height: '10'\n  },\n  m: {\n    width: '12',\n    height: '12'\n  },\n  l: {\n    width: '12',\n    height: '12'\n  }\n}\n\nexport const CheckIcon = ({ size, className }: CheckIconProps) => {\n  return (\n    <svg\n      width={sizeConfig[size].width}\n      height={sizeConfig[size].height}\n      viewBox=\"0 0 9 6\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n    >\n      <path\n        d=\"M7.4375 0.8125L3.0625 5.1875L0.875 3\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.53\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  )\n}\n","import * as React from 'react'\nimport { useRef, useState } from 'react'\nimport clsx from 'clsx'\n\nimport { useFocus } from '@savosya/savosya-myuikit-hooks'\nimport { mergeRefs } from '@savosya/savosya-myuikit-utils'\n\nimport { CheckIcon } from './components'\nimport { CheckboxProps } from './checkbox.types'\nimport cls from './index.module.scss'\n\nexport const Checkbox = React.forwardRef<HTMLLabelElement, CheckboxProps>((props, ref) => {\n  const {\n    className,\n    label,\n    // hint,\n    size = 'm',\n    checked,\n    indeterminate,\n    name,\n    onChange,\n    classes,\n    disabled,\n    ...rest\n  } = props\n  const isControlled = typeof checked === 'boolean'\n\n  const labelRef = useRef<HTMLLabelElement>(null)\n  const [focused] = useFocus(labelRef, 'keyboard')\n\n  const [innerChecked, setChecked] = useState<boolean | undefined>(checked || false)\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (disabled) return\n\n    if (onChange) {\n      onChange(event, { checked: event.target.checked, name: event.target.name })\n    }\n\n    if (typeof checked === 'undefined') {\n      setChecked(prev => !prev)\n    }\n  }\n\n  return (\n    <label\n      className={clsx(\n        cls.root,\n        cls[size],\n        {\n          [cls.indeterminate]: indeterminate,\n          [cls.checked]: isControlled ? checked : innerChecked,\n          [cls.disabled]: disabled\n        },\n        className,\n        classes?.root\n      )}\n      ref={mergeRefs([labelRef, ref])}\n    >\n      <input\n        type=\"checkbox\"\n        name={name}\n        onChange={handleChange}\n        checked={isControlled ? checked : innerChecked}\n        disabled={disabled}\n        {...rest}\n      />\n\n      <span\n        className={clsx(cls.box, cls[size], {\n          [cls.indeterminate]: indeterminate,\n          [cls.checked]: isControlled ? checked : innerChecked,\n          [cls.disabled]: disabled,\n          [cls.focus]: focused\n        })}\n      >\n        {(isControlled ? checked : innerChecked) && <CheckIcon size={size} />}\n\n        {!checked && !innerChecked && indeterminate && (\n          <span\n            className={clsx(cls.indeterminateBox, cls[size], {\n              [cls.disabled]: disabled\n            })}\n          />\n        )}\n      </span>\n\n      <span className={clsx(cls.content, classes?.content)}>{label}</span>\n    </label>\n  )\n})\n"],"names":["sizeConfig","CheckIcon","size","className","jsx","Checkbox","React.forwardRef","props","ref","label","checked","indeterminate","name","onChange","classes","disabled","rest","isControlled","labelRef","useRef","focused","useFocus","innerChecked","setChecked","useState","handleChange","event","prev","jsxs","clsx","cls","mergeRefs"],"mappings":"yLAOA,MAAAA,EAAA,CAAmB,EAAA,CACd,MAAA,KACM,OAAA,IACC,EACV,EAAA,CACG,MAAA,KACM,OAAA,IACC,EACV,EAAA,CACG,MAAA,KACM,OAAA,IACC,CAEZ,EAEOC,EAAA,CAAA,CAAA,KAAAC,EAAA,UAAAC,KACLC,EACE,MAAC,CAAA,MAAAJ,EAAAE,CAAA,EAAA,MACyB,OAAAF,EAAAE,CAAA,EAAA,OACC,QAAA,UACjB,KAAA,OACH,MAAA,6BACC,UAAAC,EACN,SAAAC,EAEA,OAAC,CAAA,EAAA,uCACG,OAAA,eACK,YAAA,OACK,cAAA,QACE,eAAA,OACC,CAAA,CACjB,CAAA,gqBC3BCC,EAAAC,EAAA,WAAA,CAAAC,EAAAC,IAAA,CACL,KAAA,CAAM,UAAAL,EACJ,MAAAM,EACA,KAAAP,EAAA,IAEO,QAAAQ,EACP,cAAAC,EACA,KAAAC,EACA,SAAAC,EACA,QAAAC,EACA,SAAAC,EACA,GAAAC,CACG,EAAAT,EAELU,EAAA,OAAAP,GAAA,UAEAQ,EAAAC,SAAA,IAAA,EACA,CAAAC,CAAA,EAAAC,EAAAH,EAAA,UAAA,EAEA,CAAAI,EAAAC,CAAA,EAAAC,EAAAA,SAAAd,GAAA,EAAA,EAEAe,EAAAC,GAAA,CACEX,IAEAF,GACEA,EAAAa,EAAA,CAAA,QAAAA,EAAA,OAAA,QAAA,KAAAA,EAAA,OAAA,IAAA,CAAA,EAGF,OAAAhB,EAAA,KACEa,EAAAI,GAAA,CAAAA,CAAA,EACF,EAGF,OAAAC,EACE,QAAC,CAAA,UAAAC,EACYC,EAAA,KACLA,EAAA5B,CAAA,EACI,CACR,CAAA4B,EAAA,aAAA,EAAAnB,EACuB,CAAAmB,EAAA,OAAA,EAAAb,EAAAP,EAAAY,EACmB,CAAAQ,EAAA,QAAA,EAAAf,CACxB,EAClBZ,EACAW,GAAA,YAAAA,EAAA,IACS,EACX,IAAAiB,EAAA,CAAAb,EAAAV,CAAA,CAAA,EAC8B,SAAA,CAE9BJ,EAAA,QAAC,CAAA,KAAA,WACM,KAAAQ,EACL,SAAAa,EACU,QAAAR,EAAAP,EAAAY,EACwB,SAAAP,EAClC,GAAAC,CACI,CAAA,EACNY,EAEA,OAAC,CAAA,UAAAC,EAAAC,EAAA,IAAAA,EAAA5B,CAAA,EAAA,CACqC,CAAA4B,EAAA,aAAA,EAAAnB,EACb,CAAAmB,EAAA,OAAA,EAAAb,EAAAP,EAAAY,EACmB,CAAAQ,EAAA,QAAA,EAAAf,EACxB,CAAAe,EAAA,KAAA,EAAAV,CACH,CAAA,EACd,SAAA,EAECH,EAAAP,EAAAY,IAAAlB,EAAAH,EAAA,CAAA,KAAAC,EAAA,EAAiE,CAAAQ,GAAA,CAAAY,GAAAX,GAAAP,EAGjE,OAAC,CAAA,UAAAyB,EAAAC,EAAA,iBAAAA,EAAA5B,CAAA,EAAA,CACkD,CAAA4B,EAAA,QAAA,EAAAf,CAC/B,CAAA,CACjB,CAAA,CACH,CAAA,CAAA,EAEJX,EAAA,OAAA,CAAA,UAAAyB,EAAAC,EAAA,QAAAhB,GAAA,YAAAA,EAAA,OAAA,EAAA,SAAAL,CAAA,CAAA,CAE6D,CAAA,CAAA,CAGnE,CAAA"}