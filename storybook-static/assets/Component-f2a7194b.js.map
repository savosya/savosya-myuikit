{"version":3,"file":"Component-f2a7194b.js","sources":["../../packages/button/src/Component.tsx"],"sourcesContent":["import * as React from 'react'\nimport { useRef } from 'react'\nimport clsx from 'clsx'\n\nimport { useFocus } from '@savosya/savosya-myuikit-hooks'\nimport { mergeRefs } from '@savosya/savosya-myuikit-utils'\nimport { Loader } from '@savosya/savosya-myuikit-loader'\nimport cls from './index.module.scss'\nimport { ButtonProps } from './button.types'\n\nconst loaderSizeConfig = {\n  s: 15,\n  m: 17,\n  l: 19\n}\n\nexport const Button = React.forwardRef<HTMLButtonElement, ButtonProps>((props, ref) => {\n  const {\n    loading,\n    children,\n    size = 'm',\n    mode = 'dark',\n    type = 'primary',\n    htmlType = 'button',\n    fill = false,\n    loaderSize,\n    leftIcon,\n    rightIcon,\n    className,\n    href,\n    onClick,\n    classes = {},\n    ...rest\n  } = props\n\n  const buttonRef = useRef<HTMLButtonElement>(null)\n  const [focus] = useFocus(buttonRef, 'keyboard')\n\n  const isOnlyIcon = !children\n\n  const handleClick = (\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent> & React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    if (rest.disabled || loading) {\n      e.preventDefault()\n      e.stopPropagation()\n\n      return\n    }\n    onClick?.(e)\n  }\n\n  return (\n    <button\n      ref={mergeRefs([ref, buttonRef])}\n      type={htmlType}\n      className={clsx(\n        cls.root,\n        cls[type],\n        cls[mode],\n        cls[size],\n        {\n          [cls.focus]: focus,\n          [cls.fill]: fill,\n          [cls.loading]: loading,\n          [cls.onlyIcon]: isOnlyIcon\n        },\n        className,\n        classes?.root\n      )}\n      onClick={handleClick}\n      {...rest}\n    >\n      {loading && <Loader fill={false} size={loaderSize ?? loaderSizeConfig[size]} className={classes?.loader} />}\n      {(!loading && leftIcon) || null}\n      {children}\n      {rightIcon}\n    </button>\n  )\n})\n"],"names":["loaderSizeConfig","Button","React.forwardRef","props","ref","loading","children","size","mode","type","htmlType","fill","loaderSize","leftIcon","rightIcon","className","href","onClick","classes","rest","buttonRef","useRef","focus","useFocus","isOnlyIcon","handleClick","e","jsxs","mergeRefs","clsx","cls","jsx","Loader"],"mappings":"mnBAUAA,EAAA,CAAyB,EAAA,GACpB,EAAA,GACA,EAAA,EAEL,EAEOC,EAAAC,EAAA,WAAA,CAAAC,EAAAC,IAAA,CACL,KAAA,CAAM,QAAAC,EACJ,SAAAC,EACA,KAAAC,EAAA,IACO,KAAAC,EAAA,OACA,KAAAC,EAAA,UACA,SAAAC,EAAA,SACI,KAAAC,EAAA,GACJ,WAAAC,EACP,SAAAC,EACA,UAAAC,EACA,UAAAC,EACA,KAAAC,EACA,QAAAC,EACA,QAAAC,EAAA,CAAA,EACW,GAAAC,CACR,EAAAhB,EAGLiB,EAAAC,SAAA,IAAA,EACA,CAAAC,CAAA,EAAAC,EAAAH,EAAA,UAAA,EAEAI,EAAA,CAAAlB,EAEAmB,EAAAC,GAAA,CAGE,GAAAP,EAAA,UAAAd,EAAA,CACEqB,EAAA,eAAA,EACAA,EAAA,gBAAA,EAEA,MAAA,CAEFT,GAAA,MAAAA,EAAAS,EAAW,EAGb,OAAAC,EACE,SAAC,CAAA,IAAAC,EAAA,CAAAxB,EAAAgB,CAAA,CAAA,EACgC,KAAAV,EACzB,UAAAmB,EACKC,EAAA,KACLA,EAAArB,CAAA,EACIqB,EAAAtB,CAAA,EACAsB,EAAAvB,CAAA,EACA,CACR,CAAAuB,EAAA,KAAA,EAAAR,EACe,CAAAQ,EAAA,IAAA,EAAAnB,EACD,CAAAmB,EAAA,OAAA,EAAAzB,EACG,CAAAyB,EAAA,QAAA,EAAAN,CACC,EAClBT,EACAG,GAAA,YAAAA,EAAA,IACS,EACX,QAAAO,EACS,GAAAN,EACL,SAAA,CAEHd,GAAA0B,EAAAC,EAAA,CAAA,KAAA,GAAA,KAAApB,GAAAZ,EAAAO,CAAA,EAAA,UAAAW,GAAA,YAAAA,EAAA,MAAA,CAAA,EAAwG,CAAAb,GAAAQ,GAAA,KAC9EP,EAC1BQ,CACA,CAAA,CAAA,CAGP,CAAA"}