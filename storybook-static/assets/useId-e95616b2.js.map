{"version":3,"file":"useId-e95616b2.js","sources":["../../node_modules/rc-util/es/hooks/useId.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport * as React from 'react';\nfunction getUseId() {\n  // We need fully clone React function here to avoid webpack warning React 17 do not export `useId`\n  var fullClone = _objectSpread({}, React);\n  return fullClone.useId;\n}\nvar uuid = 0;\n\n/** @private Note only worked in develop env. Not work in production. */\nexport function resetUuid() {\n  if (process.env.NODE_ENV !== 'production') {\n    uuid = 0;\n  }\n}\nexport default function useId(id) {\n  // Inner id for accessibility usage. Only work in client side\n  var _React$useState = React.useState('ssr-id'),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    innerId = _React$useState2[0],\n    setInnerId = _React$useState2[1];\n  var useOriginId = getUseId();\n  var reactNativeId = useOriginId === null || useOriginId === void 0 ? void 0 : useOriginId();\n  React.useEffect(function () {\n    if (!useOriginId) {\n      var nextId = uuid;\n      uuid += 1;\n      setInnerId(\"rc_unique_\".concat(nextId));\n    }\n  }, []);\n\n  // Developer passed id is single source of truth\n  if (id) {\n    return id;\n  }\n\n  // Test env always return mock id\n  if (process.env.NODE_ENV === 'test') {\n    return 'test-id';\n  }\n\n  // Return react native id or inner id\n  return reactNativeId || innerId;\n}"],"names":["getUseId","fullClone","_objectSpread","React","uuid","useId","id","_React$useState","React.useState","_React$useState2","_slicedToArray","innerId","setInnerId","useOriginId","reactNativeId","React.useEffect","nextId"],"mappings":"sGAGA,SAASA,GAAW,CAElB,IAAIC,EAAYC,EAAc,CAAE,EAAEC,CAAK,EACvC,OAAOF,EAAU,KACnB,CACA,IAAIG,EAAO,EAQI,SAASC,EAAMC,EAAI,CAEhC,IAAIC,EAAkBC,EAAc,SAAC,QAAQ,EAC3CC,EAAmBC,EAAeH,EAAiB,CAAC,EACpDI,EAAUF,EAAiB,CAAC,EAC5BG,EAAaH,EAAiB,CAAC,EAC7BI,EAAcb,IACdc,EAAgBD,GAAgB,KAAiC,OAASA,IAU9E,OATAE,EAAAA,UAAgB,UAAY,CAC1B,GAAI,CAACF,EAAa,CAChB,IAAIG,EAASZ,EACbA,GAAQ,EACRQ,EAAW,aAAa,OAAOI,CAAM,CAAC,CACvC,CACF,EAAE,CAAE,CAAA,EAGDV,GAUGQ,GAAiBH,CAC1B","x_google_ignoreList":[0]}