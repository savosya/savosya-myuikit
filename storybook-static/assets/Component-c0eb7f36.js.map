{"version":3,"file":"Component-c0eb7f36.js","sources":["../../packages/radio/build/esm/components/check-icon/index.js","../../packages/radio/build/esm/index.module.scss.js","../../packages/radio/build/esm/Component.js","../../packages/radio-group/src/Component.tsx"],"sourcesContent":["import React__default from 'react';\n\nconst sizeConfig = {\n    s: {\n        width: '10',\n        height: '10'\n    },\n    m: {\n        width: '11',\n        height: '11'\n    },\n    l: {\n        width: '12',\n        height: '12'\n    }\n};\nconst CheckIcon = ({ size, className }) => {\n    return (React__default.createElement(\"svg\", { width: sizeConfig[size].width, height: sizeConfig[size].height, viewBox: \"0 0 9 6\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", className: className },\n        React__default.createElement(\"path\", { d: \"M7.4375 0.8125L3.0625 5.1875L0.875 3\", stroke: \"currentColor\", strokeWidth: \"1.53\", strokeLinecap: \"round\", strokeLinejoin: \"round\" })));\n};\n\nexport { CheckIcon };\n//# sourceMappingURL=index.js.map\n","const cls = {\"root\":\"savosya-radio_root__8kw4\",\"checked\":\"savosya-radio_checked__KOKS\",\"indeterminate\":\"savosya-radio_indeterminate__KCXQ\",\"disabled\":\"savosya-radio_disabled__y9Xx\",\"box\":\"savosya-radio_box__BoTa\",\"s\":\"savosya-radio_s__Rg-m\",\"m\":\"savosya-radio_m__n6cI\",\"l\":\"savosya-radio_l__e56g\",\"focus\":\"savosya-radio_focus__9JcN\",\"indeterminateBox\":\"savosya-radio_indeterminateBox__5AQ4\",\"content\":\"savosya-radio_content__sLnB\"};\n\nexport { cls as default };\n//# sourceMappingURL=index.module.scss.js.map\n","import './styles.css';\nimport { __rest } from 'tslib';\nimport * as React from 'react';\nimport { useState, useRef } from 'react';\nimport clsx from 'clsx';\nimport { useFocus } from '@savosya/savosya-myuikit-hooks';\nimport { mergeRefs } from '@savosya/savosya-myuikit-utils';\nimport { CheckIcon } from './components/check-icon/index.js';\nimport cls from './index.module.scss.js';\n\nconst Radio = React.forwardRef((props, ref) => {\n    const { className, label, size = 'm', checked, markType = 'default', name, onChange, classes, disabled } = props, rest = __rest(props, [\"className\", \"label\", \"size\", \"checked\", \"markType\", \"name\", \"onChange\", \"classes\", \"disabled\"]);\n    const isControlled = typeof checked === 'boolean';\n    const [internalChecked, setChecked] = useState(false);\n    const labelRef = useRef(null);\n    const [focused] = useFocus(labelRef, 'keyboard');\n    const handleChange = (event) => {\n        if (disabled)\n            return;\n        if (!isControlled) {\n            setChecked(true);\n        }\n        if (onChange) {\n            onChange(event, { checked: event.target.checked, name: event.target.name });\n        }\n    };\n    const isChecked = isControlled ? checked : internalChecked;\n    return (React.createElement(\"label\", { className: clsx(cls.root, cls[size], {\n            [cls.indeterminate]: isChecked && markType === 'default',\n            [cls.checked]: isChecked && markType === 'check',\n            [cls.disabled]: disabled\n        }, className, classes === null || classes === void 0 ? void 0 : classes.root), ref: mergeRefs([labelRef, ref]) },\n        React.createElement(\"input\", Object.assign({ type: \"radio\", name: name, onChange: handleChange, checked: isChecked, disabled: disabled }, rest)),\n        React.createElement(\"span\", { className: clsx(cls.box, cls[size], {\n                [cls.indeterminate]: isChecked && markType === 'default',\n                [cls.checked]: isChecked && markType === 'check',\n                [cls.disabled]: disabled,\n                [cls.focus]: focused\n            }) },\n            isChecked && markType === 'check' && React.createElement(CheckIcon, { size: size }),\n            isChecked && markType === 'default' && (React.createElement(\"span\", { className: clsx(cls.indeterminateBox, cls[size], {\n                    [cls.disabled]: disabled\n                }) }))),\n        React.createElement(\"span\", { className: clsx(cls.content, classes === null || classes === void 0 ? void 0 : classes.content, { [cls.disabled]: disabled }) }, label)));\n});\n\nexport { Radio };\n//# sourceMappingURL=Component.js.map\n","import * as React from 'react'\nimport clsx from 'clsx'\n\nimport { Radio } from '@savosya/savosya-myuikit-radio'\n\nimport { RadioGroupProps } from './radio-group.types'\nimport cls from './index.module.scss'\n\nexport const RadioGroup = (props: RadioGroupProps) => {\n  const { options = [], className, name, onChange, value, radioProps, direction = 'horizontal', style } = props\n\n  const handleChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>, payload: { checked: boolean; name?: string | undefined }) => {\n      if (onChange) {\n        onChange(event.target.value, event, payload)\n      }\n    },\n    []\n  )\n\n  return (\n    <div className={clsx(cls.group, className, { [cls.vertical]: direction === 'vertical' })} style={style}>\n      {options?.map(option => (\n        <Radio\n          key={option.value}\n          name={name}\n          label={option.label}\n          value={option.value}\n          disabled={option.disabled}\n          checked={option.value === value}\n          onChange={handleChange}\n          {...radioProps}\n        />\n      ))}\n    </div>\n  )\n}\n"],"names":["sizeConfig","CheckIcon","size","className","React__default","cls","Radio","React.forwardRef","props","ref","label","checked","markType","name","onChange","classes","disabled","rest","__rest","isControlled","internalChecked","setChecked","useState","labelRef","useRef","focused","useFocus","handleChange","event","isChecked","React.createElement","clsx","mergeRefs","RadioGroup","options","value","radioProps","direction","style","React.useCallback","payload","jsx","option"],"mappings":"qOAEA,MAAAA,EAAA,CACA,EAAA,CACA,MAAA,KACA,OAAA,IACA,EACA,EAAA,CACA,MAAA,KACA,OAAA,IACA,EACA,EAAA,CACA,MAAA,KACA,OAAA,IACA,CACA,EACAC,EAAA,CAAA,CAAA,KAAAC,EAAA,UAAAC,KACAC,EAAA,cAAA,MAAA,CAAA,MAAAJ,EAAAE,CAAA,EAAA,MAAA,OAAAF,EAAAE,CAAA,EAAA,OAAA,QAAA,UAAA,KAAA,OAAA,MAAA,6BAAA,UAAAC,CAAA,EACAC,EAAA,cAAA,OAAA,CAAA,EAAA,uCAAA,OAAA,eAAA,YAAA,OAAA,cAAA,QAAA,eAAA,OAAA,CAAA,CAAA,qEClBA,MAAMC,EAAM,CAAC,KAAO,2BAA2B,QAAU,8BAA8B,cAAgB,oCAAoC,SAAW,+BAA+B,IAAM,0BAA0B,EAAI,wBAAwB,EAAI,wBAAwB,EAAI,wBAAwB,MAAQ,4BAA4B,iBAAmB,uCAAuC,QAAU,6BAA6B,ECU9aC,EAAAC,EAAA,WAAA,CAAAC,EAAAC,IAAA,CACA,KAAA,CAAA,UAAAN,EAAA,MAAAO,EAAA,KAAAR,EAAA,IAAA,QAAAS,EAAA,SAAAC,EAAA,UAAA,KAAAC,EAAA,SAAAC,EAAA,QAAAC,EAAA,SAAAC,CAAA,EAAAR,EAAAS,EAAAC,EAAAV,EAAA,CAAA,YAAA,QAAA,OAAA,UAAA,WAAA,OAAA,WAAA,UAAA,UAAA,CAAA,EACAW,EAAA,OAAAR,GAAA,UACA,CAAAS,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACAC,EAAAC,SAAA,IAAA,EACA,CAAAC,CAAA,EAAAC,EAAAH,EAAA,UAAA,EACAI,EAAAC,GAAA,CACAZ,IAEAG,GACAE,EAAA,EAAA,EAEAP,GACAA,EAAAc,EAAA,CAAA,QAAAA,EAAA,OAAA,QAAA,KAAAA,EAAA,OAAA,IAAA,CAAA,EAEA,EACAC,EAAAV,EAAAR,EAAAS,EACA,OAAAU,EAAA,cAAA,QAAA,CAAA,UAAAC,EAAA1B,EAAA,KAAAA,EAAAH,CAAA,EAAA,CACA,CAAAG,EAAA,aAAA,EAAAwB,GAAAjB,IAAA,UACA,CAAAP,EAAA,OAAA,EAAAwB,GAAAjB,IAAA,QACA,CAAAP,EAAA,QAAA,EAAAW,CACA,EAAAb,EAAAY,GAAA,KAAA,OAAAA,EAAA,IAAA,EAAA,IAAAiB,EAAA,CAAAT,EAAAd,CAAA,CAAA,CAAA,EACAqB,EAAA,cAAA,QAAA,OAAA,OAAA,CAAA,KAAA,QAAA,KAAAjB,EAAA,SAAAc,EAAA,QAAAE,EAAA,SAAAb,CAAA,EAAAC,CAAA,CAAA,EACAa,gBAAA,OAAA,CAAA,UAAAC,EAAA1B,EAAA,IAAAA,EAAAH,CAAA,EAAA,CACA,CAAAG,EAAA,aAAA,EAAAwB,GAAAjB,IAAA,UACA,CAAAP,EAAA,OAAA,EAAAwB,GAAAjB,IAAA,QACA,CAAAP,EAAA,QAAA,EAAAW,EACA,CAAAX,EAAA,KAAA,EAAAoB,CACA,CAAA,CAAA,EACAI,GAAAjB,IAAA,SAAAkB,EAAAA,cAAA7B,EAAA,CAAA,KAAAC,EAAA,EACA2B,GAAAjB,IAAA,WAAAkB,EAAAA,cAAA,OAAA,CAAA,UAAAC,EAAA1B,EAAA,iBAAAA,EAAAH,CAAA,EAAA,CACA,CAAAG,EAAA,QAAA,EAAAW,CACA,CAAA,CAAA,CAAA,CAAA,EACAc,gBAAA,OAAA,CAAA,UAAAC,EAAA1B,EAAA,QAAAU,GAAA,KAAA,OAAAA,EAAA,QAAA,CAAA,CAAAV,EAAA,QAAA,EAAAW,EAAA,CAAA,EAAAN,CAAA,CAAA,CACA,CAAA,uICpCOuB,EAAAzB,GAAA,CACL,KAAA,CAAA,QAAA0B,EAAA,CAAA,EAAA,UAAA/B,EAAA,KAAAU,EAAA,SAAAC,EAAA,MAAAqB,EAAA,WAAAC,EAAA,UAAAC,EAAA,aAAA,MAAAC,CAAA,EAAA9B,EAEAmB,EAAAY,EAAA,YAA2B,CAAAX,EAAAY,IAAA,CAEvB1B,GACEA,EAAAc,EAAA,OAAA,MAAAA,EAAAY,CAAA,CACF,EACF,CAAA,CACC,EAGH,OAAAC,EAAA,MAAA,CAAA,UAAAV,EAAA1B,EAAA,MAAAF,EAAA,CAAA,CAAAE,EAAA,QAAA,EAAAgC,IAAA,UAAA,CAAA,EAAA,MAAAC,EAAA,SAAAJ,GAAA,YAAAA,EAAA,IAAAQ,GAAAD,EAGMnC,EAAC,CAAA,KAAAO,EAEC,MAAA6B,EAAA,MACc,MAAAA,EAAA,MACA,SAAAA,EAAA,SACG,QAAAA,EAAA,QAAAP,EACS,SAAAR,EAChB,GAAAS,CACN,EAAAM,EAAA,KAPQ,EAAA,CAAA,CAYtB"}